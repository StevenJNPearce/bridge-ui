(() => {
  const bridge = [
    {
      constant: !0,
      inputs: [],
      name: 'blockReward',
      outputs: [{ name: '', type: 'uint64' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [],
      name: 'lastParentBlock',
      outputs: [{ name: '', type: 'uint64' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [{ name: '', type: 'address' }],
      name: 'operators',
      outputs: [
        { name: 'joinedAt', type: 'uint64' },
        { name: 'claimedUntil', type: 'uint64' },
        { name: 'stakeAmount', type: 'uint256' },
      ],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [],
      name: 'parentBlockInterval',
      outputs: [{ name: '', type: 'uint32' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [],
      name: 'epochLength',
      outputs: [{ name: '', type: 'uint32' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [{ name: '', type: 'uint32' }],
      name: 'deposits',
      outputs: [
        { name: 'height', type: 'uint64' },
        { name: 'owner', type: 'address' },
        { name: 'amount', type: 'uint256' },
      ],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [{ name: '', type: 'bytes32' }],
      name: 'chain',
      outputs: [
        { name: 'parent', type: 'bytes32' },
        { name: 'height', type: 'uint64' },
        { name: 'parentIndex', type: 'uint32' },
        { name: 'operator', type: 'address' },
      ],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [],
      name: 'operatorCount',
      outputs: [{ name: '', type: 'uint32' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [],
      name: 'totalStake',
      outputs: [{ name: '', type: 'uint256' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [],
      name: 'stakePeriod',
      outputs: [{ name: '', type: 'uint32' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [],
      name: 'tipHash',
      outputs: [{ name: '', type: 'bytes32' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [],
      name: 'token',
      outputs: [{ name: '', type: 'address' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [{ name: '', type: 'bytes32' }],
      name: 'exits',
      outputs: [
        { name: 'amount', type: 'uint64' },
        { name: 'opened', type: 'uint32' },
        { name: 'owner', type: 'address' },
      ],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { name: '_token', type: 'address' },
        { name: '_parentBlockInterval', type: 'uint32' },
        { name: '_epochLength', type: 'uint32' },
        { name: '_blockReward', type: 'uint64' },
        { name: '_stakePeriod', type: 'uint32' },
      ],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      anonymous: !1,
      inputs: [
        { indexed: !1, name: 'blockNumber', type: 'uint256' },
        { indexed: !0, name: 'root', type: 'bytes32' },
      ],
      name: 'NewHeight',
      type: 'event',
    },
    {
      anonymous: !1,
      inputs: [
        { indexed: !0, name: 'blockNumber', type: 'uint256' },
        { indexed: !1, name: 'root', type: 'bytes32' },
      ],
      name: 'ArchiveBlock',
      type: 'event',
    },
    {
      anonymous: !1,
      inputs: [
        { indexed: !0, name: 'signerAddr', type: 'address' },
        { indexed: !1, name: 'blockNumber', type: 'uint256' },
      ],
      name: 'OperatorJoin',
      type: 'event',
    },
    {
      anonymous: !1,
      inputs: [
        { indexed: !0, name: 'signerAddr', type: 'address' },
        { indexed: !1, name: 'blockNumber', type: 'uint256' },
      ],
      name: 'OperatorLeave',
      type: 'event',
    },
    {
      anonymous: !1,
      inputs: [
        { indexed: !0, name: 'depositId', type: 'uint32' },
        { indexed: !1, name: 'depositor', type: 'address' },
      ],
      name: 'NewDeposit',
      type: 'event',
    },
    {
      constant: !1,
      inputs: [{ name: 'amount', type: 'uint256' }],
      name: 'join',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [],
      name: 'requestLeave',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [{ name: 'signerAddr', type: 'address' }],
      name: 'payout',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [
        { name: 'prevHash', type: 'bytes32' },
        { name: 'root', type: 'bytes32' },
        { name: 'v', type: 'uint8' },
        { name: 'r', type: 'bytes32' },
        { name: 's', type: 'bytes32' },
        { name: 'orphans', type: 'bytes32[]' },
      ],
      name: 'submitBlockAndPrune',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [
        { name: 'prevHash', type: 'bytes32' },
        { name: 'root', type: 'bytes32' },
        { name: 'v', type: 'uint8' },
        { name: 'r', type: 'bytes32' },
        { name: 's', type: 'bytes32' },
      ],
      name: 'submitBlock',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [
        { name: 'hashA', type: 'bytes32' },
        { name: 'hashB', type: 'bytes32' },
      ],
      name: 'reportHeightConflict',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [{ name: '_data', type: 'bytes32[]' }],
      name: 'reportLightBranch',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [
        { name: '_data', type: 'bytes32[]' },
        { name: '_offset', type: 'uint256' },
      ],
      name: 'buildMap',
      outputs: [{ name: 'map', type: 'uint256[]' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [
        { name: '_data', type: 'bytes32[]' },
        { name: 'nodeHash', type: 'bytes32' },
        { name: '_map', type: 'uint256[]' },
      ],
      name: 'getWeight',
      outputs: [
        { name: 'weight', type: 'uint256' },
        { name: 'i', type: 'uint256' },
        { name: 'prevHash', type: 'bytes32' },
      ],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [{ name: '_data', type: 'bytes32[]' }],
      name: 'isLightBranch',
      outputs: [
        { name: 'isLight', type: 'bool' },
        { name: 'prevHash', type: 'bytes32' },
      ],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [{ name: '_txData', type: 'bytes32[]' }],
      name: 'reportInvalidDeposit',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [
        { name: '_proof', type: 'bytes32[]' },
        { name: '_prevProof', type: 'bytes32[]' },
      ],
      name: 'reportDoubleSpend',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [{ name: 'nodeId', type: 'bytes32' }],
      name: 'getBranchCount',
      outputs: [{ name: 'childCount', type: 'uint256' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [
        { name: 'nodeId', type: 'bytes32' },
        { name: 'index', type: 'uint256' },
      ],
      name: 'getBranchAtIndex',
      outputs: [{ name: 'childId', type: 'bytes32' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [],
      name: 'getHighest',
      outputs: [
        { name: '', type: 'bytes32' },
        { name: '', type: 'uint64' },
        { name: '', type: 'uint32' },
        { name: '', type: 'address' },
      ],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [{ name: '_operators', type: 'address[]' }],
      name: 'getTip',
      outputs: [{ name: '', type: 'bytes32' }, { name: '', type: 'uint256' }],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !0,
      inputs: [{ name: 'height', type: 'uint256' }],
      name: 'getBlock',
      outputs: [
        { name: 'root', type: 'bytes32' },
        { name: 'operator', type: 'address' },
      ],
      payable: !1,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [{ name: 'amount', type: 'uint256' }],
      name: 'deposit',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: !1,
      inputs: [{ name: '_proof', type: 'bytes32[]' }],
      name: 'withdrawBurn',
      outputs: [],
      payable: !1,
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ];

  const token = [
    {
      constant: true,
      inputs: [],
      name: 'name',
      outputs: [
        {
          name: '',
          type: 'string',
        },
      ],
      payable: false,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: false,
      inputs: [
        {
          name: '_spender',
          type: 'address',
        },
        {
          name: '_value',
          type: 'uint256',
        },
      ],
      name: 'approve',
      outputs: [
        {
          name: '',
          type: 'bool',
        },
      ],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: true,
      inputs: [],
      name: 'totalSupply',
      outputs: [
        {
          name: '',
          type: 'uint256',
        },
      ],
      payable: false,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: false,
      inputs: [
        {
          name: '_from',
          type: 'address',
        },
        {
          name: '_to',
          type: 'address',
        },
        {
          name: '_value',
          type: 'uint256',
        },
      ],
      name: 'transferFrom',
      outputs: [
        {
          name: '',
          type: 'bool',
        },
      ],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: true,
      inputs: [],
      name: 'INITIAL_SUPPLY',
      outputs: [
        {
          name: '',
          type: 'uint256',
        },
      ],
      payable: false,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: true,
      inputs: [],
      name: 'decimals',
      outputs: [
        {
          name: '',
          type: 'uint8',
        },
      ],
      payable: false,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: false,
      inputs: [
        {
          name: '_spender',
          type: 'address',
        },
        {
          name: '_subtractedValue',
          type: 'uint256',
        },
      ],
      name: 'decreaseApproval',
      outputs: [
        {
          name: '',
          type: 'bool',
        },
      ],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: true,
      inputs: [
        {
          name: '_owner',
          type: 'address',
        },
      ],
      name: 'balanceOf',
      outputs: [
        {
          name: '',
          type: 'uint256',
        },
      ],
      payable: false,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: true,
      inputs: [],
      name: 'symbol',
      outputs: [
        {
          name: '',
          type: 'string',
        },
      ],
      payable: false,
      stateMutability: 'view',
      type: 'function',
    },
    {
      constant: false,
      inputs: [
        {
          name: '_to',
          type: 'address',
        },
        {
          name: '_value',
          type: 'uint256',
        },
      ],
      name: 'transfer',
      outputs: [
        {
          name: '',
          type: 'bool',
        },
      ],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: false,
      inputs: [
        {
          name: '_spender',
          type: 'address',
        },
        {
          name: '_addedValue',
          type: 'uint256',
        },
      ],
      name: 'increaseApproval',
      outputs: [
        {
          name: '',
          type: 'bool',
        },
      ],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      constant: true,
      inputs: [
        {
          name: '_owner',
          type: 'address',
        },
        {
          name: '_spender',
          type: 'address',
        },
      ],
      name: 'allowance',
      outputs: [
        {
          name: '',
          type: 'uint256',
        },
      ],
      payable: false,
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'constructor',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          name: 'spender',
          type: 'address',
        },
        {
          indexed: false,
          name: 'value',
          type: 'uint256',
        },
      ],
      name: 'Approval',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          name: 'to',
          type: 'address',
        },
        {
          indexed: false,
          name: 'value',
          type: 'uint256',
        },
      ],
      name: 'Transfer',
      type: 'event',
    },
  ];

  window.abis = { bridge, token };
})();
